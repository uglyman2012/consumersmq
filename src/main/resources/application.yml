# 应用服务 WEB 访问端口
server:
  port: 8086
# 应用名称
spring:
  application:
    name: consumermq
  rabbitmq:
    host: 10.68.244.130
    port: 5672
    username: test
    password: 123456
#    template:
#      mandatory: true
#      retry:
#        enabled: true       #重试
#        max-attempts: 4
#        initial-interval: 5000
#        max-interval: 500000
#        multiplier: 4
    output:
      ansi:
        enabled: ALWAYS

  cloud:
#    config:
#      enabled: false
#      fail-fast: true
    stream:
      defaultBinder: rabbit
      bindings:
        input:
          group: aa
          destination: reportOrder-dev
          content-type: application/json
#          consumer:
#            concurrency: 1 # 初始/最少/空闲时 消费者数量。默认1
#            maxConcurrency: 5 配置在这里无效
#            max-attempts: 4
#            backOffInitialInterval: 1000
#            backOffMultiplier: 4
#            如果没用设置重试次数,true:表示重新入队,容易造成死循环
#          requeueRejected: true
#      rabbit:
#        bindings:
#          input:
#            consumer:
#              acknowledge-mode: MANUAL
#              max-attempts: 4
#              prefetch: 2 # 限制consumer在消费消息时，一次能同时获取的消息数量，默认：1。
#              maxConcurrency: 5 # 默认：1。queue的消费者的最大数量。当前消费者数量不足以及时消费消息时, 会动态增加消费者数量, 直到到达最大数量, 即该配置的值.
#              死信队列消息存活时间
#              dlqTtl: 60000
#              队列消息存活时间
#              ttl: 2
#              autoBindDlq: true
#              可选配置
#              deadLetterExchange: mq
#              deadLetterQueueName: pppppp
#              republishToDlq: false

  output:
    ansi:
      enabled: ALWAYS
redis:
  url: redis://127.0.0.1:6379
  timeout: 5s
  lettuce:
    pool:
      max-active: 1000
      max-idle: 20
      min-idle: 0
      max-wait: 5s


